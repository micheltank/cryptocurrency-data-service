// Code generated by MockGen. DO NOT EDIT.
// Source: bitcoin_api.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	domain "micheltank/cryptocurrency-data-service/internal/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBlockchainApi is a mock of BlockchainApi interface.
type MockBlockchainApi struct {
	ctrl     *gomock.Controller
	recorder *MockBlockchainApiMockRecorder
}

// MockBlockchainApiMockRecorder is the mock recorder for MockBlockchainApi.
type MockBlockchainApiMockRecorder struct {
	mock *MockBlockchainApi
}

// NewMockBlockchainApi creates a new mock instance.
func NewMockBlockchainApi(ctrl *gomock.Controller) *MockBlockchainApi {
	mock := &MockBlockchainApi{ctrl: ctrl}
	mock.recorder = &MockBlockchainApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlockchainApi) EXPECT() *MockBlockchainApiMockRecorder {
	return m.recorder
}

// GetBlock mocks base method.
func (m *MockBlockchainApi) GetBlock(networkCode domain.NetworkCode, hash string) (domain.Block, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlock", networkCode, hash)
	ret0, _ := ret[0].(domain.Block)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlock indicates an expected call of GetBlock.
func (mr *MockBlockchainApiMockRecorder) GetBlock(networkCode, hash interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlock", reflect.TypeOf((*MockBlockchainApi)(nil).GetBlock), networkCode, hash)
}

// GetTransaction mocks base method.
func (m *MockBlockchainApi) GetTransaction(networkCode domain.NetworkCode, id string) (domain.Transaction, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransaction", networkCode, id)
	ret0, _ := ret[0].(domain.Transaction)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTransaction indicates an expected call of GetTransaction.
func (mr *MockBlockchainApiMockRecorder) GetTransaction(networkCode, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransaction", reflect.TypeOf((*MockBlockchainApi)(nil).GetTransaction), networkCode, id)
}
